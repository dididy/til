{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["PostListQuery","Raw","query","parse","value","allMarkdownRemark","edges","map","value$1","node","value$2","excerpt","value$3","frontmatter","undefined","title","date","category","path","serialize","value$4","value$5","value$7","serializeVariables","param","makeVariables","makeDefaultVariables","Index","Props","content","Gatsby","post","Snippet","React","key","children","className","to","Layout","make","$$default"],"mappings":"2FAAA,0OA0GA,IAAIA,EAAgB,CAClBC,IAjGQ,GAkGRC,MAhGO,aAiGPC,MA/EF,SAAeC,GAGb,MAAO,CACCC,kBAAmB,CACjBC,MAJIF,EAAMC,kBACEC,MAGGC,KAAI,SAAUH,GACvB,IAAII,EAAUJ,EAAMK,KAChBC,EAAUF,EAAQG,QAClBC,EAAUJ,EAAQK,YACtB,MAAO,CACCJ,KAAM,CACJE,QAAsB,MAAXD,EAAmBA,OAAUI,EACxCD,YAA0B,MAAXD,EAAoB,CAC7BG,MAAOH,EAAQG,MACfC,KAAMJ,EAAQI,KACdC,SAAUL,EAAQK,SAClBC,KAAMN,EAAQM,WACXJ,UA+DnCK,UAvDF,SAAmBf,GAkCjB,MAAO,CACCC,kBAJgB,CACtBC,MA/BYF,EAAMC,kBACEC,MACFC,KAAI,SAAUH,GAC5B,IAEIS,EAFAL,EAAUJ,EAAMK,KAChBC,EAAUF,EAAQK,YAEtB,QAAgBC,IAAZJ,EAAuB,CACzB,IAAIE,EAAUF,EAAQQ,KAClBE,EAAUV,EAAQO,SAClBI,EAAUX,EAAQM,KAEtBH,EAAc,CACZE,MAFYL,EAAQK,MAGpBC,KAAMK,EACNJ,SAAUG,EACVF,KAAMN,QAGRC,EAAc,KAEhB,IAAIS,EAAUd,EAAQG,QAMtB,MAAO,CACCF,KALG,CACTE,aAFwBG,IAAZQ,EAAwBA,EAAU,KAG9CT,YAAaA,UA+BrBU,mBAjBF,SAA4BC,KAkB1BC,cAdF,SAAuBD,KAerBE,qBAXF,SAA8BF,MAc9B,SAASG,EAAMC,GACb,IAEIC,EAFOC,IAzGJ,cA0GUzB,kBAAkBC,MACfC,KAAI,SAAUwB,GAC5B,IAAIlB,EAAcmB,IAAqBD,EAAKtB,KAAKI,aAC7CI,EAAWJ,EAAYI,SACvBF,EAAQF,EAAYE,MACpBG,EAAOL,EAAYK,KACvB,OAAOe,gBAAoB,KAAM,CACrBC,IAAKnB,GACJkB,gBAAoBH,IAAa,CAC9BK,SAAUF,gBAAoB,KAAM,CAC9BG,UAAW,cACVrB,GACPsB,GAAI,IAAMpB,EAAW,IAAMC,QAGjD,OAAOe,gBAAoBK,IAAa,CAC5BH,SAAUF,gBAAoB,WAAOnB,EAAWmB,gBAAoB,UAAMnB,EAAWe,MAInG,IAAIU,EAAOZ,EAEPa,EAAYb,G","file":"component---src-pages-index-js-f53b045044b5579ea4e3.js","sourcesContent":["// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as React from \"react\";\nimport * as Layout from \"../layout/Layout.js\";\nimport * as Gatsby from \"gatsby\";\nimport * as Snippet from \"../utils/Snippet.js\";\n\nimport './index.scss'\n;\n\nvar Raw = {};\n\nvar query = (graphql`\n  query PostListQuery  {\n    allMarkdownRemark(sort: {order: [DESC], fields: [frontmatter___date]})  {\n      edges  {\n        node  {\n          excerpt(truncate: true, pruneLength: 200)\n          frontmatter  {\n            title\n            date(formatString: \"YYYY-MM-DD HH:m:ss\")\n            category\n            path\n          }\n        }\n      }\n    }\n  }\n`);\n\nfunction parse(value) {\n  var value$1 = value.allMarkdownRemark;\n  var value$2 = value$1.edges;\n  return {\n          allMarkdownRemark: {\n            edges: value$2.map(function (value) {\n                  var value$1 = value.node;\n                  var value$2 = value$1.excerpt;\n                  var value$3 = value$1.frontmatter;\n                  return {\n                          node: {\n                            excerpt: !(value$2 == null) ? value$2 : undefined,\n                            frontmatter: !(value$3 == null) ? ({\n                                  title: value$3.title,\n                                  date: value$3.date,\n                                  category: value$3.category,\n                                  path: value$3.path\n                                }) : undefined\n                          }\n                        };\n                })\n          }\n        };\n}\n\nfunction serialize(value) {\n  var value$1 = value.allMarkdownRemark;\n  var value$2 = value$1.edges;\n  var edges = value$2.map(function (value) {\n        var value$1 = value.node;\n        var value$2 = value$1.frontmatter;\n        var frontmatter;\n        if (value$2 !== undefined) {\n          var value$3 = value$2.path;\n          var value$4 = value$2.category;\n          var value$5 = value$2.date;\n          var value$6 = value$2.title;\n          frontmatter = {\n            title: value$6,\n            date: value$5,\n            category: value$4,\n            path: value$3\n          };\n        } else {\n          frontmatter = null;\n        }\n        var value$7 = value$1.excerpt;\n        var excerpt = value$7 !== undefined ? value$7 : null;\n        var node = {\n          excerpt: excerpt,\n          frontmatter: frontmatter\n        };\n        return {\n                node: node\n              };\n      });\n  var allMarkdownRemark = {\n    edges: edges\n  };\n  return {\n          allMarkdownRemark: allMarkdownRemark\n        };\n}\n\nfunction serializeVariables(param) {\n  \n}\n\nfunction makeVariables(param) {\n  \n}\n\nfunction makeDefaultVariables(param) {\n  \n}\n\nvar PostListQuery = {\n  Raw: Raw,\n  query: query,\n  parse: parse,\n  serialize: serialize,\n  serializeVariables: serializeVariables,\n  makeVariables: makeVariables,\n  makeDefaultVariables: makeDefaultVariables\n};\n\nfunction Index(Props) {\n  var data = Gatsby.useStaticQuery(query);\n  var posts = data.allMarkdownRemark.edges;\n  var content = posts.map(function (post) {\n        var frontmatter = Snippet.getException(post.node.frontmatter);\n        var category = frontmatter.category;\n        var title = frontmatter.title;\n        var path = frontmatter.path;\n        return React.createElement(\"li\", {\n                    key: title\n                  }, React.createElement(Gatsby.Link, {\n                        children: React.createElement(\"h2\", {\n                              className: \"post-title\"\n                            }, title),\n                        to: \"/\" + category + \"/\" + path\n                      }));\n      });\n  return React.createElement(Layout.make, {\n              children: React.createElement(\"div\", undefined, React.createElement(\"ul\", undefined, content))\n            });\n}\n\nvar make = Index;\n\nvar $$default = Index;\n\nexport {\n  PostListQuery ,\n  make ,\n  $$default ,\n  $$default as default,\n  \n}\n/*  Not a pure module */\n"],"sourceRoot":""}